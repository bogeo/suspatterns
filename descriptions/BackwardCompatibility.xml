<?xml version="1.0" ?>s
<pattern patternID="6" collection="candidates" 
		xsi:noNamespaceSchemaLocation="../plml/plml_bo-2.0.xsd" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<name>Backward Compatibility</name>
	<problem>
		A new software release does not run on the computer currently used. 
	</problem>
	<solution>
		The software producer ensures that the new software release runs on the 
		old machine. Since ICT permanently undergoes evelutionary developments,  
		it will be hard to ensure this. - However, this gives more a 
		postulation than a software design pattern. Maybe in the future we 
		can identify some concrete patterns which allow to achieve this goal. 
		Some clues could be provided by a formal description (what still is a 
		ToDo; however, the system to be described formally could include 
		product stakeholders such as the user or product managers as well  
		as the machine which might become obsolescent or system-internal 
		interfaces as participants).
	</solution>
	<literature>
	 	Kern, E.; Dick, M.; Naumann, S.; Filler, A. (2015): Labelling Sustainable Software Products and Websites. 3rd Intern. Conf. on ICT for Sustainability (ICT4S 2015) / EnviroInfo 2015, pp. 82-91. 
 	</literature>
	<formalization/>
	<related-patterns>
		<pattern-link type="related-to" 
			patternID="7" collection="candidates" label="component replaceability"/>
	</related-patterns>
	<management>
		<author>Benno Schmidt</author>
		<revision-number>0.1</revision-number>
		<creation-date>14.07.2019</creation-date>
		<last-modified>14.07.2019</last-modified>
	</management>
</pattern>
